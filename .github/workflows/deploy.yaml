name: cicd

on:
  push:
    branches:
      - main

env:
  IMG_TAG: ${{ github.sha }}

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::031215319865:role/githubRole

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/php/ecs/dockerfile
          platforms: linux/amd64
          push: true
          tags: public.ecr.aws/v9g2r9e2/wwwtskt/laravel:${{ env.IMG_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  update-taskdef:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::031215319865:role/githubRole

      - uses: kayac/ecspresso@v2
        with:
          version: latest

      - name: Register new task definition and get ARN
        id: register
        run: |
          FAMILY_NAME=laravel-sli
          ACCOUNT_ID=031215319865
          REGION=ap-northeast-1

          ecspresso register --config ecspresso/ecspresso.yml --output > taskdef.json

          TASK_DEF_ARN=$(jq -r '.taskDefinitionArn' taskdef.json)

          echo "[INFO] TASK_DEF_ARN=$TASK_DEF_ARN"
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> "$GITHUB_ENV"

      - name: Create appspec.yml and push s3
        run: |
          export TASK_DEF_ARN="${TASK_DEF_ARN}"
          envsubst < appspec_template.yml > appspec.yml
          aws s3 cp appspec.yml s3://laravel-sli-codedeploy/appspec.yml

      - name: Execute bg-deploy
        run: aws deploy create-deployment --cli-input-json file://create-deployment.json --region ap-northeast-1
